using Domain.Models;
using Domain.WorkResults;
using Logistic.Application.Services;
using Logistic.Dto.Requests;
using Logistic.Dto.Responses;
using Logistic.Enums;
using Logistic.Infrastructure.Extensions;
using Logistic.Interfaces;
using Microsoft.AspNetCore.Mvc;

namespace Logistic.Controllers;

[ApiController]
[Route("[controller]/[action]")]
public class AutogeneratedController<T> : Controller where T : BaseModel
{
    private readonly AutogeneratedService<T> _service;
    public IPresentationActionMessageContainer Results { get; }
    public AutogeneratedController(AutogeneratedService<T> service, IPresentationActionMessageContainer results)
    {
        _service = service;
        Results = results;
    }

    [HttpGet(nameof(List))]
    public LogisticWebResponse List()
    {
        var result = _service.GetList();
        var data = result.Data.ConvertToObjectsList();
        Results.AddBusinessResults(result.Messages, result.IsSuccessful);
        
        var response =  new LogisticWebResponse(data, Results);
        response.MarkAutogenerated();
        
        return response;
    }
    
    [HttpGet(nameof(Get))]
    public LogisticWebResponse Get(long id)
    {
        var result = _service.Get(id);
        var data = result.Data.ConvertToObjectsList();
        Results.AddBusinessResults(result.Messages, result.IsSuccessful);
        
        var response =  new LogisticWebResponse(data, Results);
        response.MarkAutogenerated();
        
        return response;
    }
    
    [HttpPost(nameof(Create))]
    public async Task<LogisticWebResponse> Create(LogisticWebRequestForAutogeneration form)
    {
        var entities = form.Data;
        var result = await _service.Create(entities);
        var data = result.Data.ConvertToObjectsList();
        Results.AddBusinessResults(result.Messages, result.IsSuccessful);
        
        var response =  new LogisticWebResponse(data, Results);
        response.MarkAutogenerated();
        
        return response;
    }
    
    [HttpPost(nameof(Change))]
    public async Task<LogisticWebResponse> Change(LogisticWebRequestForAutogeneration form)
    {
        var entities = form.Data;
        var result = await _service.Update(entities);
        var data = result.Data.ConvertToObjectsList();
        Results.AddBusinessResults(result.Messages, result.IsSuccessful);
        
        var response =  new LogisticWebResponse(data, Results);
        response.MarkAutogenerated();
        
        return response;
    }
}